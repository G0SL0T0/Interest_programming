import disnake
from disnake.ext import commands
from disnake.ui import Button, View
from disnake import FFmpegPCMAudio
import random
import requests
import youtube_dl


# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞
intents = disnake.Intents.all()
bot = commands.Bot(command_prefix="!", intents=intents)

ytdl_format_options = {
    'format': 'bestaudio/best',
    'outtmpl': '%(extractor)s-%(id)s-%(title)s.%(ext)s',
    'restrictfilenames': True,
    'noplaylist': True,
    'nocheckcertificate': True,
    'ignoreerrors': False,
    'logtostderr': False,
    'quiet': True,
    'no_warnings': True,
    'default_search': 'auto',
    'source_address': '0.0.0.0'
}

ytdl = youtube_dl.YoutubeDL(ytdl_format_options)
# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
class MainMenu(View):
    def __init__(self):
        super().__init__(timeout=None)

    @disnake.ui.button(label="–ú–æ–¥–µ—Ä–∞—Ü–∏—è", style=disnake.ButtonStyle.primary)
    async def moderation_button(self, button: disnake.ui.Button, interaction: disnake.Interaction):
        await interaction.response.send_message("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", view=ModerationMenu(), ephemeral=True)

    @disnake.ui.button(label="–†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è", style=disnake.ButtonStyle.success)
    async def fun_button(self, button: disnake.ui.Button, interaction: disnake.Interaction):
        await interaction.response.send_message("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", view=FunMenu(), ephemeral=True)

    @disnake.ui.button(label="–£—Ç–∏–ª–∏—Ç—ã", style=disnake.ButtonStyle.secondary)
    async def utilities_button(self, button: disnake.ui.Button, interaction: disnake.Interaction):
        await interaction.response.send_message("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", view=UtilitiesMenu(), ephemeral=True)

    @disnake.ui.button(label="–ú—É–∑—ã–∫–∞", style=disnake.ButtonStyle.danger)
    async def music_button(self, button: disnake.ui.Button, interaction: disnake.Interaction):
        await interaction.response.send_message("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", view=MusicMenu(), ephemeral=True)

# –ú–µ–Ω—é –º–æ–¥–µ—Ä–∞—Ü–∏–∏
class ModerationMenu(View):
    def __init__(self):
        super().__init__(timeout=None)

    @disnake.ui.button(label="–£–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ", style=disnake.ButtonStyle.primary)
    async def delete_message_button(self, button: disnake.ui.Button, interaction: disnake.Interaction):
        await interaction.response.send_message("–§—É–Ω–∫—Ü–∏—è —É–¥–∞–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è.", ephemeral=True)

    @disnake.ui.button(label="–í—ã–¥–∞—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ", style=disnake.ButtonStyle.danger)
    async def warn_button(self, button: disnake.ui.Button, interaction: disnake.Interaction):
        await interaction.response.send_message("–§—É–Ω–∫—Ü–∏—è –≤—ã–¥–∞—á–∏ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è.", ephemeral=True)

# –ú–µ–Ω—é —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏–π
class FunMenu(View):
    def __init__(self):
        super().__init__(timeout=None)

    @disnake.ui.button(label="–°–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ", style=disnake.ButtonStyle.success)
    async def roll_button(self, button: disnake.ui.Button, interaction: disnake.Interaction):
        number = random.randint(1, 100)
        await interaction.response.send_message(f"üé≤ –í—ã–ø–∞–ª–æ —á–∏—Å–ª–æ: {number}", ephemeral=True)

    @disnake.ui.button(label="–ú–µ–º", style=disnake.ButtonStyle.success)
    async def meme_button(self, button: disnake.ui.Button, interaction: disnake.Interaction):
        await interaction.response.send_message("–§—É–Ω–∫—Ü–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –º–µ–º–∞.", ephemeral=True)

# –ú–µ–Ω—é —É—Ç–∏–ª–∏—Ç
class UtilitiesMenu(View):
    def __init__(self):
        super().__init__(timeout=None)

    @disnake.ui.button(label="–ü–æ–≥–æ–¥–∞", style=disnake.ButtonStyle.secondary)
    async def weather_button(self, button: disnake.ui.Button, interaction: disnake.Interaction):
        await interaction.response.send_message("–í–≤–µ–¥–∏—Ç–µ –≥–æ—Ä–æ–¥ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–≥–æ–¥—ã.", ephemeral=True)

    @disnake.ui.button(label="–ü–µ—Ä–µ–≤–æ–¥—á–∏–∫", style=disnake.ButtonStyle.secondary)
    async def translate_button(self, button: disnake.ui.Button, interaction: disnake.Interaction):
        await interaction.response.send_message("–§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–≤–æ–¥–∞ —Ç–µ–∫—Å—Ç–∞.", ephemeral=True)

# –ú–µ–Ω—é –º—É–∑—ã–∫–∏
class MusicMenu(View):
    def __init__(self):
        super().__init__(timeout=None)

    @disnake.ui.button(label="–í–æ—Å–ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏", style=disnake.ButtonStyle.danger)
    async def play_button(self, button: disnake.ui.Button, interaction: disnake.Interaction):
        await interaction.response.send_message("–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ YouTube –¥–ª—è –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è.", ephemeral=True)

    @disnake.ui.button(label="–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å", style=disnake.ButtonStyle.danger)
    async def stop_button(self, button: disnake.ui.Button, interaction: disnake.Interaction):
        await interaction.response.send_message("–ú—É–∑—ã–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞.", ephemeral=True)
        
@bot.command()
async def quiz(ctx):
    questions = [
        {"question": "–°–∫–æ–ª—å–∫–æ –ø–ª–∞–Ω–µ—Ç –≤ –°–æ–ª–Ω–µ—á–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ?", "answer": "8"},
        {"question": "–ö—Ç–æ –Ω–∞–ø–∏—Å–∞–ª '–í–æ–π–Ω—É –∏ –º–∏—Ä'?", "answer": "–¢–æ–ª—Å—Ç–æ–π"},
    ]
    question = random.choice(questions)
    await ctx.send(f"–í–æ–ø—Ä–æ—Å: {question['question']}")

    def check(m):
        return m.author == ctx.author and m.channel == ctx.channel

    try:
        msg = await bot.wait_for("message", timeout=10.0, check=check)
    except disnake.TimeoutError:
        await ctx.send("–í—Ä–µ–º—è –≤—ã—à–ª–æ!")
    else:
        if msg.content.lower() == question["answer"].lower():
            await ctx.send("–ü—Ä–∞–≤–∏–ª—å–Ω–æ!")
        else:
            await ctx.send(f"–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ! –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: {question['answer']}")

@bot.command()
async def joke(ctx):
    jokes = [
        "–ü–æ—á–µ–º—É –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç—ã –ø—É—Ç–∞—é—Ç –•—ç–ª–ª–æ—É–∏–Ω –∏ –†–æ–∂–¥–µ—Å—Ç–≤–æ? –ü–æ—Ç–æ–º—É —á—Ç–æ Oct 31 == Dec 25!",
        "–ü–æ—á–µ–º—É –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç—ã –Ω–µ –ª—é–±—è—Ç –ø—Ä–∏—Ä–æ–¥—É? –¢–∞–º —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –±–∞–≥–æ–≤.",
    ]
    await ctx.send(random.choice(jokes))
    
@bot.command()
@commands.has_permissions(ban_members=True)
async def ban(ctx, member: disnake.Member, reason=None):
    await member.ban(reason=reason)
    await ctx.send(f"{member.mention} –±—ã–ª –∑–∞–±–∞–Ω–µ–Ω.")

@bot.command()
@commands.has_permissions(kick_members=True)
async def kick(ctx, member: disnake.Member, reason=None):
    await member.kick(reason=reason)
    await ctx.send(f"{member.mention} –±—ã–ª –∫–∏–∫–Ω—É—Ç.")

@bot.command()
@commands.has_permissions(manage_messages=True)
async def clear(ctx, amount: int):
    await ctx.channel.purge(limit=amount + 1)
    await ctx.send(f"–£–¥–∞–ª–µ–Ω–æ {amount} —Å–æ–æ–±—â–µ–Ω–∏–π.", delete_after=5)

@bot.command()
async def translate(ctx, text: str, lang: str):
    url = f"https://api.mymemory.translated.net/get?q={text}&langpair=en|{lang}"
    response = requests.get(url).json()
    translation = response["responseData"]["translatedText"]
    await ctx.send(f"–ü–µ—Ä–µ–≤–æ–¥: {translation}")
    
@bot.command()
async def play(ctx, url: str):
    voice_channel = ctx.author.voice.channel
    if not voice_channel:
        await ctx.send("–í—ã –¥–æ–ª–∂–Ω—ã –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ!")
        return

    voice_client = await voice_channel.connect()
    with ytdl as ydl:
        info = ydl.extract_info(url, download=False)
        url2 = info['formats'][0]['url']
        voice_client.play(FFmpegPCMAudio(url2))

@bot.command()
async def stop(ctx):
    voice_client = ctx.voice_client
    if voice_client.is_playing():
        voice_client.stop()
        await ctx.send("–ú—É–∑—ã–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞.")
        
@bot.command()
async def google(ctx, query: str):
    await ctx.send(f"–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞ –¥–ª—è '{query}': https://www.google.com/search?q={query}")
    
# –°–æ–±—ã—Ç–∏–µ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞
@bot.event
async def on_ready():
    print(f"{bot.user.name}: –ó–∞–ø—É—â–µ–Ω!")

# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –≤—ã–∑–æ–≤–∞ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
@bot.command()
async def menu(ctx):
    await ctx.send("–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:", view=MainMenu())

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.run("=")